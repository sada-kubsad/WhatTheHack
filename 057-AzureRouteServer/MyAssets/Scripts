

 az login --use-device-code --tenant  a4613e8b-9f97-40ec-8f69-fd2a2d2243fa

Set Default resource group:
---------------------------
az config set defaults.group=wthars

Start All VMs:
--------------
az vm start  -g wthars -n datacenter-nva  > /dev/null 2>&1 & 
az vm start  -g wthars -n hubvm           > /dev/null 2>&1 & 
az vm start  -g wthars -n spoke1-vm       > /dev/null 2>&1 & 
az vm start  -g wthars -n spoke2-vm       > /dev/null 2>&1 & 
az vm start  -g wthars -n hub-nva1        > /dev/null 2>&1 & 
az vm start  -g wthars -n onpremVM        > /dev/null 2>&1 & 


Stop Deallocate All VMs:
-------------------------
az vm deallocate -g wthars -n datacenter-nva   > /dev/null 2>&1 & 
az vm deallocate -g wthars -n hubvm            > /dev/null 2>&1 & 
az vm deallocate -g wthars -n spoke1-vm        > /dev/null 2>&1 & 
az vm deallocate -g wthars -n spoke2-vm        > /dev/null 2>&1 & 
az vm deallocate -g wthars -n hub-nva1         > /dev/null 2>&1 &
az vm deallocate -g wthars -n onpremVM         > /dev/null 2>&1 &


Check VMs state:
-----------------------
az vm get-instance-view -g wthars -n datacenter-nva | grep -i power
az vm get-instance-view -g wthars -n  hubvm         | grep -i power
az vm get-instance-view -g wthars -n  spoke1-vm     | grep -i power
az vm get-instance-view -g wthars -n  spoke2-vm     | grep -i power
az vm get-instance-view -g wthars -n  hub-nva1      | grep -i power
az vm get-instance-view -g wthars -n  onpremVM      | grep -i power

Connecting to VMs:
------------------
export datacenter=$(az network public-ip show -n datacenter-pip -g wthars --query ipAddress -o tsv)
export onpremVM=$(az network public-ip show -n onpremVM-ip -g wthars --query ipAddress -o tsv)
export hubvm=$(az network public-ip show -n hubvm-pip -g wthars --query ipAddress -o tsv)
export hubnva=$(az network public-ip show -n hub-nva1-pip -g wthars --query ipAddress -o tsv)
export routeserver=$(az network public-ip show -n routeserverip -g wthars --query ipAddress -o tsv)
export spoke1vm=$(az network public-ip show -n spoke1-vm-pip -g wthars --query ipAddress -o tsv)
export spoke2vm=$(az network public-ip show -n spoke2-vm-pip -g wthars --query ipAddress -o tsv)



cat ~/.ssh/id_rsa.pub on your local machine and upload the public key to Azure VM > Reset Passsword > SSH public Key source = use Existing key 
My public key on OfficeVM-2 is:
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCY12aVXmISdwgxsWUEw7AeUdSfl9db16/dMDDDkNlhBYDeNVALZD0NncYOa8Fa/l4GHN0+2jfPuUPnQtVJwdLXUynQuMmPOQ384jhe8VzV0vd3JZW8GAxf6EZVye50ZduWl7cX/vM9OyeuAcESSwC3tuSfk8WwTijW7nvczW1z5dDuAPq6ceO3MaPe5uBy3ZaC5xhvGfPAKdbKvNXTGbNOQ/QnVsAhYAWWVVkiOILtVqxqs/p+sEHsDGDM0a/o1Qjo/M8xHKEmsbfp8VyzmXATD455H/80tnmN6KwyzYZNIP/5DDscyEhthDqxJ/p9Qd1kb42DAFO6g6dSKLuufzAJ

My public key on OfficeLaptop3 is:
ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQDHlKCxf99c1BXhOP006ipDp673csCc65pbUl8fnJ7fyHQrSCVTXb1iI0x8FdJpcXlOhNYhVh3zwB0Zse3mrS0HixlK5dkjj4OpjeWVW3Yw8IicmyMR2kR9fC9K8RblL9hXVF6JuUvAPhRN/1v/HW1HYgbpGLsGlYVp0SGL2hOqAlfVCGPep6x8RtVP7sHAG1CG5ww3koE0F4fTLqN8Qin+utdbIJicb9Wc2EFIxTuvn1BMiTajsaGv2wOVEU2MIFBhrqtIrx/0cDiu//n6F7cYwf0e7X5hcxXI/C/DvDWb9e2VxEuEglGNjgPdX0TKseOqf5S+vBnn3XIz7pdO80I6lv7L93WumbEPS/KEdOGy6UDxRPK9CfczEwwupJp268XFSnz4mMXEUIhBtsoEaRgYmRZFRIJ2RKHauN3D7KftaSrchUXY1VjfZsTDIDFgwEdEVJDR+hyRviL+FCkdeEpClNjcn/iUmaTZkj2TyGGcyz1iiBv1G1dfNzPalXjNXFc= sada@OfficeLaptop

ssh azureuser@$datacenter -oHostKeyAlgorithms=+ssh-rsa -oKexAlgorithms=+diffie-hellman-group14-sha1
ssh azureuser@$hubvm
ssh azureuser@$hubvmnva
ssh azureuser@$spoke1vm
ssh azureuser@$spoke2vm
ssh azureuser@$onpremVM



Onprem CISCO device BGP config:
-------------------------------
crypto ikev2 proposal azure-proposal
  encryption aes-cbc-256 aes-cbc-128 3des
  integrity sha1
  group 2
  exit
!
crypto ikev2 policy azure-policy
  proposal azure-proposal
  exit
!
crypto ikev2 keyring azure-keyring
  peer 20.106.103.241
    address 20.106.103.241
    pre-shared-key supersecretPSK@123
    exit
  peer 20.150.143.81
    address 20.150.143.81
    pre-shared-key supersecretPSK@123
    exit
  exit
!
crypto ikev2 profile azure-profile
  match address local interface GigabitEthernet1
  match identity remote address  20.106.103.241 255.255.255.255
  match identity remote address  20.150.143.81 255.255.255.255
  authentication remote pre-share
  authentication local pre-share
  keyring local azure-keyring
  exit
!
crypto ipsec transform-set azure-ipsec-proposal-set esp-aes 256 esp-sha-hmac
 mode tunnel
 exit

crypto ipsec profile azure-vti
  set transform-set azure-ipsec-proposal-set
  set ikev2-profile azure-profile
  set security-association lifetime kilobytes 102400000
  set security-association lifetime seconds 3600 
 exit
!
interface Tunnel0
 ip unnumbered GigabitEthernet1 
 ip tcp adjust-mss 1350
 tunnel source GigabitEthernet1
 tunnel mode ipsec ipv4
 tunnel destination 20.106.103.241
 tunnel protection ipsec profile azure-vti
exit
!
interface Tunnel1
 ip unnumbered GigabitEthernet1 
 ip tcp adjust-mss 1350
 tunnel source GigabitEthernet1
 tunnel mode ipsec ipv4
 tunnel destination 20.150.143.81
 tunnel protection ipsec profile azure-vti
exit
!
router bgp 65501
 bgp router-id interface GigabitEthernet1
 bgp log-neighbor-changes
 redistribute connected
 neighbor 10.0.0.5 remote-as 65515
 neighbor 10.0.0.5 ebgp-multihop 5
 neighbor 10.0.0.5 update-source GigabitEthernet1
 neighbor 10.0.0.4 remote-as 65515
 neighbor 10.0.0.4 ebgp-multihop 5
 neighbor 10.0.0.4 update-source GigabitEthernet1
 maximum-paths eibgp 4
!
ip route 10.0.0.5 255.255.255.255 Tunnel0
ip route 10.0.0.4 255.255.255.255 Tunnel1
!
end
!
wr mem


Lessons Learnt from Chris Frasch troubleshooting VPN tunnels:
-------------------------------------------------------------
To check if a VPN tunnel is flipping: sh loggin

To see the routes: sh run | in route 
router bgp 65501
ip route 10.0.0.4 255.255.255.255 Tunnel1         <-- Says that to get to BGP endpoint1 of VPNGW in Azure, route through Tunnel1
ip route 10.0.0.5 255.255.255.255 Tunnel0         <-- Says that to get to BGP endpoint2 of VPNGW in Azure, route through Tunnel0
ip route 20.106.103.241 255.255.255.255 Tunnel0       <-- Incorrect Route for Tunnel0. This is public ip of Gateway. BGP happens over private BGP ip of gateway
ip route 20.150.143.81 255.255.255.255 Tunnel1        <-- Incorrect Route for Tunnel1. This is public ip of Gateway. BGP happens over private BGP ip of gateway 
ip route vrf GS 0.0.0.0 0.0.0.0 GigabitEthernet1 172.16.1.1 global


Ping to the Azure VPN GAteway BGP endpoints from the cisco CSR fails: ping 10.0.0.4 / ping 10.0.0.5

Check the VPN tunnel status: crypto ikev2 sa 

See complete CSR configuration: sh run

See teh complete CSR logs: sh loggin

To see the tunnel status: sh ip int br
Interface              IP-Address      OK? Method Status                Protocol
GigabitEthernet1       172.16.1.10     YES DHCP   up                    up
Tunnel0                172.16.1.10     YES TFTP   up                    down  <-- Tunnl0 is down
Tunnel1                172.16.1.10     YES TFTP   up                    down  <-- Tunnl1 is down
VirtualPortGroup0      192.168.35.101  YES NVRAM  up                    up


To remove routes to the VPNGW public IP. It should be VPNGW BGP peer IP:
conf t
no ip route <public IP-1 of VPN GW in Azure> 255.255.255.255 Tunnel0
no ip route <public IP-2 of VPN GW in Azure> 255.255.255.255 Tunnel1 
end

sh loggin output before and after:
before:
*Jan 11 18:48:37.304: %TUN-5-RECURDOWN: Tunnel0 temporarily disabled due to recursive routing
*Jan 11 18:48:37.305: %LINEPROTO-5-UPDOWN: Line protocol on Interface Tunnel0, changed state to down
*Jan 11 18:48:37.313: %LINEPROTO-5-UPDOWN: Line protocol on Interface Tunnel1, changed state to down
*Jan 11 18:49:37.308: %LINEPROTO-5-UPDOWN: Line protocol on Interface Tunnel0, changed state to up
*Jan 11 18:49:37.315: %LINEPROTO-5-UPDOWN: Line protocol on Interface Tunnel1, changed state to up
*Jan 11 18:49:37.321: %ADJ-5-PARENT: Midchain parent maintenance for IP midchain out of Tunnel0 - looped chain attempting to stack
*Jan 11 18:49:47.307: %TUN-5-RECURDOWN: Tunnel0 temporarily disabled due to recursive routing

After:
*Jan 11 22:43:08.056: %TUN-5-RECURDOWN: Tunnel0 temporarily disabled due to recursive routing
*Jan 11 22:43:08.057: %LINEPROTO-5-UPDOWN: Line protocol on Interface Tunnel0, changed state to down
*Jan 11 22:43:08.065: %LINEPROTO-5-UPDOWN: Line protocol on Interface Tunnel1, changed state to down
*Jan 11 22:44:03.001: %SYS-5-CONFIG_I: Configured from console by azureuser on vty0 (172.251.40.139)
*Jan 11 22:44:08.060: %LINEPROTO-5-UPDOWN: Line protocol on Interface Tunnel0, changed state to up
*Jan 11 22:44:08.069: %LINEPROTO-5-UPDOWN: Line protocol on Interface Tunnel1, changed state to up
*Jan 11 22:44:08.859: %BGP-5-ADJCHANGE: neighbor 10.0.0.5 Up
*Jan 11 22:44:09.906: %BGP-5-ADJCHANGE: neighbor 10.0.0.4 Up

sh ip bgp sum output Before and after fix: 
Before Fix:
BGP router identifier 172.16.1.10, local AS number 65501
BGP table version is 2, main routing table version 2
1 network entries using 248 bytes of memory
1 path entries using 136 bytes of memory
1/1 BGP path/bestpath attribute entries using 288 bytes of memory
0 BGP route-map cache entries using 0 bytes of memory
0 BGP filter-list cache entries using 0 bytes of memory
BGP using 672 total bytes of memory
BGP activity 1/0 prefixes, 1/0 paths, scan interval 60 secs
1 networks peaked at 16:21:30 Jan 11 2024 UTC (06:22:38.048 ago)

Neighbor        V           AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd
10.0.0.4        4        65515       0       0        1    0    0 never    Idle
10.0.0.5        4        65515       0       0        1    0    0 never    Idle
20.106.103.241  4        65515       0       0        1    0    0 never    Idle
20.150.143.81   4        65515       0       0        1    0    0 never    Idle

After fix:
datacenter-nva#sh ip bgp sum
BGP router identifier 172.16.1.10, local AS number 65501
BGP table version is 8, main routing table version 8
4 network entries using 992 bytes of memory
7 path entries using 952 bytes of memory
3 multipath network entries and 6 multipath paths
2/2 BGP path/bestpath attribute entries using 576 bytes of memory
1 BGP AS-PATH entries using 24 bytes of memory
0 BGP route-map cache entries using 0 bytes of memory
0 BGP filter-list cache entries using 0 bytes of memory
BGP using 2544 total bytes of memory
BGP activity 4/0 prefixes, 7/0 paths, scan interval 60 secs
4 networks peaked at 22:44:08 Jan 11 2024 UTC (00:00:33.641 ago)

Neighbor        V           AS MsgRcvd MsgSent   TblVer  InQ OutQ Up/Down  State/PfxRcd
10.0.0.4        4        65515       3       6        8    0    0 00:00:31        3
10.0.0.5        4        65515       3       6        8    0    0 00:00:32        3
20.106.103.241  4        65515       0       0        1    0    0 never    Idle
20.150.143.81   4        65515       0       0        1    0    0 never    Idle




BGP Routes learnt by VPN Gateway:
---------------------------------
az network vnet-gateway list-learned-routes -g wthars -n vpngw -o table
Network         NextHop    Origin    SourcePeer    AsPath    Weight
--------------  ---------  --------  ------------  --------  --------
10.0.0.0/16                Network   10.0.0.4                32768
10.1.0.0/16                Network   10.0.0.4                32768
10.2.0.0/16                Network   10.0.0.4                32768
172.16.1.10/32             Network   10.0.0.4                32768
172.16.1.10/32  10.0.0.5   IBgp      10.0.0.5                32768
172.16.0.0/16              Network   10.0.0.4                32768
172.16.0.0/16   10.0.0.5   IBgp      10.0.0.5                32768
10.0.0.0/16                Network   10.0.0.5                32768
10.1.0.0/16                Network   10.0.0.5                32768
10.2.0.0/16                Network   10.0.0.5                32768
172.16.1.10/32             Network   10.0.0.5                32768
172.16.1.10/32  10.0.0.4   IBgp      10.0.0.4                32768
172.16.0.0/16              Network   10.0.0.5                32768
172.16.0.0/16   10.0.0.4   IBgp      10.0.0.4                32768

Route related commands: 
-----------------------
az network nic show-effective-route-table --name hubvmVMNic -g wthars -o table
az network nic show-effective-route-table --name datacenter-nvaVMNic  -g wthars -o table
az network nic show-effective-route-table --name hub-nva1VMNic -g wthars -o table
az network nic show-effective-route-table --name spoke1-vmVMNic -g wthars -o table
az network nic show-effective-route-table --name spoke2-vmVMNic -g wthars -o table
az network nic show-effective-route-table --name onpremvm235_z1 -g wthars -o table


az network routeserver peering list-learned-routes -n nva --routeserver rs -g $rg --query 'RouteServiceRole_IN_0' -o table


Troubleshooting:
----------------
Capture VPN Gateway traffic:
---------------------------
Packet Capture URL - SAS URL: 
https://delme98.blob.core.windows.net/vpngwcaptures?sp=rw&st=2024-01-26T22:49:11Z&se=2029-01-27T06:49:11Z&spr=https&sv=2022-11-02&sr=c&sig=2asxutgpNRHD4xVyyK%2FpT4xhhWQ0kOzyRuY9Wi4JI6g%3D


TCP Dump on Cisco:
-------------------
https://www.cisco.com/c/en/us/support/docs/ios-nx-os-software/ios-embedded-packet-capture/116045-productconfig-epc-00.html
See section: "Cisco IOS-XE Configuration Example" in link above

monitor capture CAP interface Tunnel0 both
monitor capture CAP interface Tunnel1 both
monitor capture CAP match ipv4 protocol 1 any any limit pps 1000000
monitor capture CAP start
monitor capture CAP stop
show monitor capture CAP buffer brief
no monitor capture CAP

Linux Based NVA: 
-----------------
Source: https://github.com/erjosito/azure-nvas/tree/main/ubuntu

# Variables
rg=nva
location=westeurope
vnet_name=nva
vnet_prefix=192.168.0.0/16
nva_subnet_name=nva
nva_subnet_prefix=192.168.0.0/24
nva_name=mynva
nva_pip_name="${nva_name}-pip"
nva_vm_size=Standard_B1s
# Function to get the first IP (default gateway) of a subnet. Example: first_ip 192.168.0.64/27
function first_ip(){
    subnet=$1
    IP=$(echo $subnet | cut -d/ -f 1)
    IP_HEX=$(printf '%.2X%.2X%.2X%.2X\n' `echo $IP | sed -e 's/\./ /g'`)
    NEXT_IP_HEX=$(printf %.8X `echo $(( 0x$IP_HEX + 1 ))`)
    NEXT_IP=$(printf '%d.%d.%d.%d\n' `echo $NEXT_IP_HEX | sed -r 's/(..)/0x\1 /g'`)
    echo "$NEXT_IP"
}
# Create RG and VNet
echo "Creating RG and VNet..."
az group create -n $rg -l $location -o none
az network vnet create -n $vnet_name -g $rg --address-prefixes $vnet_prefix --subnet-name $nva_subnet_name --subnet-prefixes $nva_subnet_prefix -o none
# NSG for NVA
echo "Creating NSG ${nva_name}-nsg..."
az network nsg create -n "${nva_name}-nsg" -g $rg -o none
az network nsg rule create -n SSH --nsg-name "${nva_name}-nsg" -g $rg --priority 1000 --destination-port-ranges 22 --access Allow --protocol Tcp -o none
az network nsg rule create -n IKE --nsg-name "${nva_name}-nsg" -g $rg --priority 1010 --destination-port-ranges 4500 --access Allow --protocol Udp -o none
az network nsg rule create -n IPsec --nsg-name "${nva_name}-nsg" -g $rg --priority 1020 --destination-port-ranges 500 --access Allow --protocol Udp -o none
az network nsg rule create -n ICMP --nsg-name "${nva_name}-nsg" -g $rg --priority 1030 --destination-port-ranges '*' --access Allow --protocol Icmp -o none
# Cloudinit file for NVA
linuxnva_cloudinit_file=/tmp/linuxnva_cloudinit.txt
cat <<EOF > $linuxnva_cloudinit_file
#cloud-config
runcmd:
  - apt update && apt install -y bird strongswan
  - sysctl -w net.ipv4.ip_forward=1
  - sysctl -w net.ipv4.conf.all.accept_redirects=0 
  - sysctl -w net.ipv4.conf.all.send_redirects=0
EOF
# VM for NVA
echo "Creating VM $nva_name..."
az vm create -n $nva_name -g $rg -l $location --image Ubuntu2204 --generate-ssh-keys \
    --public-ip-address $nva_pip_name --public-ip-sku Standard --vnet-name $vnet_name --size $nva_vm_size --subnet $nva_subnet_name \
    --custom-data $linuxnva_cloudinit_file --nsg "${nva_name}-nsg" -o none
nva_nic_id=$(az vm show -n $nva_name -g "$rg" --query 'networkProfile.networkInterfaces[0].id' -o tsv)
az network nic update --ids $nva_nic_id --ip-forwarding -o none
echo "Getting information about the created VM..."
nva_pip_ip=$(az network public-ip show -n $nva_pip_name -g $rg --query ipAddress -o tsv) && echo $nva_pip_ip
nva_private_ip=$(az network nic show --ids $nva_nic_id --query 'ipConfigurations[0].privateIpAddress' -o tsv) && echo $nva_private_ip
nva_default_gw=$(first_ip "$nva_subnet_prefix") && echo $nva_default_gw



-----Ouput:
137.117.176.94

192.168.0.1


IPSec Config:
-------------
# Get VPN GW information from standalone VPN Gateway (active/active)
vpngw_name=name_of_your_vwan_vpn_gateway
vpn_psk=your_ipsec_preshared_key
vpngw_bgp_asn=$(az network vnet-gateway show -n $vpngw_name -g $rg --query 'bgpSettings.asn' -o tsv) && echo $vpnwg_bgp_asn
vpngw_gw0_pip=$(az network vnet-gateway show -n $vpngw_name -g $rg --query 'bgpSettings.bgpPeeringAddresses[0].tunnelIpAddresses[0]' -o tsv) && echo $vpngw_gw0_pip
vpngw_gw0_bgp_ip=$(az network vnet-gateway show -n $vpngw_name -g $rg --query 'bgpSettings.bgpPeeringAddresses[0].defaultBgpIpAddresses[0]' -o tsv) && echo $vpngw_gw0_bgp_ip
vpngw_gw1_pip=$(az network vnet-gateway show -n $vpngw_name -g $rg --query 'bgpSettings.bgpPeeringAddresses[1].tunnelIpAddresses[0]' -o tsv) && echo $vpngw_gw1_pip
vpngw_gw1_bgp_ip=$(az network vnet-gateway show -n $vpngw_name -g $rg --query 'bgpSettings.bgpPeeringAddresses[1].defaultBgpIpAddresses[0]' -o tsv) && echo $vpngw_gw1_bgp_ip
echo "Extracted info for vpn gateway: Gateway0 $vpngw_gw0_pip, $vpngw_gw0_bgp_ip. Gateway1 $vpngw_gw1_pip, $vpngw_gw0_bgp_ip. ASN $vpngw_bgp_asn"
